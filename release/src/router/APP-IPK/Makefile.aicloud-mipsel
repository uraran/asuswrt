CURRENT=..
SEP=echo "\033[41;1m   $@   \033[0m"
export SRCBASE := $(shell cd ../;pwd)
export BUILD := $(shell (gcc -dumpmachine))
export HOSTCC := gcc
export PLATFORM := mipsel-uclibc
CROSS_COMPILE := mipsel-linux-
export CROSS_COMPILER := $(CROSS_COMPILE)
export CONFIGURE := ./configure --host=mipsel-linux --build=$(BUILD)
export TOOLCHAIN := $(shell cd $(dir $(shell which $(CROSS_COMPILE)gcc))/.. && pwd)
export IPKG_TOOLS := $(shell cd $(dir $(shell which $(CROSS_COMPILE)gcc))../../../ipkg-utils-1.7 && pwd)
#export LD_DIR := $(shell cd $(dir $(shell which $(CROSS_COMPILE)gcc))/../../../../staging && pwd)

export CC := $(CROSS_COMPILE)gcc
export AR := $(CROSS_COMPILE)ar
export AS := $(CROSS_COMPILE)as
export LD := $(CROSS_COMPILE)ld
export NM := $(CROSS_COMPILE)nm
export RANLIB := $(CROSS_COMPILE)ranlib
export STRIP := $(CROSS_COMPILE)strip
export SIZE := $(CROSS_COMPILE)size
export CXX := $(CROSS_COMPILE)g++
export CXXCPP := $(CROSS_COMPILE)g++ -E

obj-y += prepare
obj-y += zlib
obj-y += libdisk
obj-y += libxml
obj-y += openssl
obj-y += curl
obj-y += pcre
obj-y += samba
obj-y += sqlite
obj-y += wb
#obj-y += push_log
obj-y += lighttpd
obj-y += Aicloud-ipk
obj-y += subsequent


all: $(obj-y)
	@echo $(LD_DIR)
	@echo $(TOOLCHAIN)
	@echo $(IPKG_TOOLS)

clean:
	@$(MAKE) -C $(CURRENT)/zlib clean
	@$(MAKE) -C $(CURRENT)/libdisk clean -f Makefile.mipsel
	@$(MAKE) -C $(CURRENT)/libxml2 clean
	@$(MAKE) -C $(CURRENT)/openssl clean
	@$(MAKE) -C $(CURRENT)/curl-7.21.7 clean
	@$(MAKE) -C $(CURRENT)/pcre-8.31 clean
	@$(MAKE) -C $(CURRENT)/sqlite clean
	@$(MAKE) -C $(CURRENT)/lighttpd-1.4.39 clean
	@$(MAKE) -C $(CURRENT)/samba-3.5.8 clean -f Makefile.mipsel
	@$(MAKE) -C $(CURRENT)/wb clean -f Makefile.mipsel
	#@$(MAKE) -C $(CURRENT)/push_log clean
	@rm -rf Aicloud-pkg-mipsel/opt/tmp/lib/*
	@rm -rf Aicloud-pkg-mipsel/opt/tmp/bin/*
	@rm -rf *.ipk

prepare: 
	if [ -f $(TOOLCHAIN)/include/iconv.h ] ; then \
		mv -f $(TOOLCHAIN)/include/iconv.h $(TOOLCHAIN)/include/iconv.h.org ; \
	fi
	if [ -f /usr/include/iconv.h ] || [ -f /usr/local/include/iconv.h ] ; then \
		sudo mv -f /usr/include/iconv.h /usr/include/iconv.h.org ; \
		sudo mv -f /usr/local/include/iconv.h /usr/local/include/iconv.h.org ; \
	fi


subsequent:
	if [ -f $(TOOLCHAIN)/include/iconv.h.org ] ; then \
		mv -f $(TOOLCHAIN)/include/iconv.h.org $(TOOLCHAIN)/include/iconv.h ; \
	fi
	if [ -f /usr/include/iconv.h.org ] ; then \
		sudo mv -f /usr/include/iconv.h.org /usr/include/iconv.h ; \
	fi
	if [ -f /usr/local/include/iconv.h.org ] ; then \
		sudo mv -f /usr/local/include/iconv.h.org /usr/local/include/iconv.h ; \
	fi


zlib/stamp-h1: 
		cd $(CURRENT)/zlib \
		touch stamp-h1;	

zlib: zlib/stamp-h1
	cd $(CURRENT)/zlib && \
	AR=$(AR) AS=$(AS) LD=$(LD) NM=$(NM) CC=$(CC) CPP="$(CC) -E" GCC=$(CC) CXX=$(CXX) RANLIB=$(RANLIB) STRIP=$(STRIP)  \
	prefix=$(SRCBASE)/opt \
	./configure \
	--shared
	@$(MAKE) -C $(CURRENT)/zlib all
	cd $(CURRENT)/zlib && \
	$(MAKE) install

libdisk/stamp-h1: 
		cd $(CURRENT)/libdisk \
		touch stamp-h1;	

libdisk: libdisk/stamp-h1
	@echo $(IPKG_TOOLS)
	@$(MAKE) -C $(CURRENT)/libdisk all -f Makefile.mipsel
	cp -rf $(CURRENT)/libdisk/write_webdav_conf Aicloud-pkg-mipsel/opt/tmp/bin/


libxml2/stamp-h1: 
		cd $(CURRENT)/libxml2 \
		touch stamp-h1;	

libxml: libxml2/stamp-h1
	cd $(CURRENT)/libxml2 && \
	AR=$(AR) AS=$(AS) LD=$(LD) NM=$(NM) CC=$(CC) CPP="$(CC) -E" GCC=$(CC) CXX=$(CXX) RANLIB=$(RANLIB) STRIP=$(STRIP)  CPPFLAGS="-O2   -pipe  -I$(SRCBASE)/opt/include " LDFLAGS=" -L$(SRCBASE)/opt/lib -Wl,-rpath,/opt/lib -Wl,-rpath-link,$(SRCBASE)/opt/lib " \
	./configure --build=i386-pc-linux-gnu --host=mipsel-linux --target=mipsel-linux --prefix=$(SRCBASE)/opt --without-python --disable-dependency-tracking --without-zlib
	@$(MAKE) -C $(CURRENT)/libxml2 all
	cd $(CURRENT)/libxml2 && \
	$(MAKE) install
	#cp -rf $(CURRENT)/libxml2/.libs/libxml2.so.2.7.8 Aicloud-pkg-mipsel/opt/tmp/lib/


openssl/stamp-h1: 
		cd $(CURRENT)/openssl \
		touch stamp-h1;	


openssl: openssl/stamp-h1
	cd $(CURRENT)/openssl && \
	AR=$(AR) AS=$(AS) LD=$(LD) NM=$(NM) CC=$(CC) CPP="$(CC) -E" GCC=$(CC) CXX=$(CXX) RANLIB=$(RANLIB) STRIP=$(STRIP) LDFLAGS=" -L$(SRCBASE)/opt/lib -Wl,-rpath,/opt/lib -Wl,-rpath-link,$(SRCBASE)/opt/lib" \
	./Configure shared zlib-dynamic -O2 -pipe  -I$(SRCBASE)/opt/include --openssldir=/opt/share/openssl --prefix=$(SRCBASE)/opt linux-mipsel
	#cd $(CURRENT)/openssl && sed -i "s|^SHARED_LDFLAGS=|SHARED_LDFLAGS=-Wl,-rpath,\/opt\/lib -Wl,-rpath-link,$(SRCBASE)\/opt\/lib|" Makefile
	@$(MAKE) -C $(CURRENT)/openssl \
	EX_LIBS=" -L$(LD_DIR)/opt/lib -Wl,-rpath,/opt/lib -Wl,-rpath-link,$(LD_DIR)/opt/lib -ldl"
	cp -rf $(CURRENT)/openssl/libssl.so.1.0.0 Aicloud-pkg-mipsel/opt/tmp/lib/
	cp -rf $(CURRENT)/openssl/libcrypto.so.1.0.0 Aicloud-pkg-mipsel/opt/tmp/lib/
	cp -rf $(CURRENT)/openssl/apps/openssl Aicloud-pkg-mipsel/opt/tmp/bin/aicloud_openssl
	cd $(CURRENT)/openssl && \
	$(MAKE) install

curl/stamp-h1: 
		cd $(CURRENT)/curl-7.21.7 \
		touch stamp-h1;	

curl: curl/stamp-h1
	cd $(CURRENT)/curl-7.21.7 && \
	AR=$(AR) AS=$(AS) LD=$(LD) NM=$(NM) CC=$(CC) CPP="$(CC) -E" GCC=$(CC) CXX=$(CXX) RANLIB=$(RANLIB) STRIP=$(STRIP)  \
	./configure --build=i386-pc-linux-gnu --host=mipsel-linux --target=mipsel-linux --prefix=$(SRCBASE)/opt --enable-http --with-ssl=$(SRCBASE)/openssl
	@$(MAKE) -C $(CURRENT)/curl-7.21.7
	cd $(CURRENT)/curl-7.21.7 && \
	$(MAKE) install

pcre/stamp-h1: 
		cd $(CURRENT)/pcre-8.31 \
		touch stamp-h1;	
	
pcre: pcre/stamp-h1
	cd $(CURRENT)/pcre-8.31 && \
	AR=$(AR) AS=$(AS) LD=$(LD) NM=$(NM) CC=$(CC) CPP="$(CC) -E" GCC=$(CC) CXX=$(CXX) RANLIB=$(RANLIB) STRIP=$(STRIP)  CC_FOR_BUILD=gcc CPPFLAGS="-O2   -pipe  -I$(SRCBASE)/opt/include" LDFLAGS=" -L$(SRCBASE)/opt/lib -Wl,-rpath,/opt/lib -Wl,-rpath-link,$(SRCBASE)/opt/lib" \
	./configure --build=i386-pc-linux-gnu --host=mipsel-linux --target=mipsel-linux --prefix=$(SRCBASE)/opt --disable-dependency-tracking
	@$(MAKE) -C $(CURRENT)/pcre-8.31 all
	cd $(CURRENT)/pcre-8.31 && \
	$(MAKE) install

sqlite/stamp-h1: 
		cd $(CURRENT)/sqlite \
		touch stamp-h1;	

sqlite:sqlite/stamp-h1
	cd $(CURRENT)/sqlite && \
	AR=$(TOOLCHAIN)/bin/mipsel-linux-uclibc-ar AS=$(TOOLCHAIN)/bin/mipsel-linux-uclibc-as LD=$(TOOLCHAIN)/bin/mipsel-linux-uclibc-ld NM=$(TOOLCHAIN)/bin/mipsel-linux-uclibc-nm CC=$(TOOLCHAIN)/bin/mipsel-linux-uclibc-gcc CPP="$(TOOLCHAIN)/bin/mipsel-linux-uclibc-gcc -E" GCC=$(TOOLCHAIN)/bin/mipsel-linux-uclibc-gcc CXX=$(TOOLCHAIN)/bin/mipsel-linux-uclibc-g++ RANLIB=$(TOOLCHAIN)/bin/mipsel-linux-uclibc-ranlib STRIP=$(TOOLCHAIN)/bin/mipsel-linux-uclibc-strip config_BUILD_CC="gcc" config_TARGET_CC="$(TOOLCHAIN)/bin/mipsel-linux-uclibc-gcc" LDFLAGS="-ffunction-sections -fdata-sections -Wl,--gc-sections" \
	./configure --build=i386-pc-linux-gnu --host=mipsel-linux --target=mipsel-linux --prefix=$(SRCBASE)/opt --enable-shared --enable-static --disable-readline --disable-dynamic-extensions --enable-threadsafe --disable-dependency-tracking
	@$(MAKE) -C $(CURRENT)/sqlite all
	cp -rf $(CURRENT)/sqlite/.libs/libsqlite3.so.0.8.6 Aicloud-pkg-mipsel/opt/tmp/lib/
	cd $(CURRENT)/sqlite && \
	$(MAKE) install
samba:
	@$(MAKE) -C $(CURRENT)/samba-3.5.8 -f Makefile.mipsel
	cp -rf $(CURRENT)/samba-3.5.8/source3/bin/libsmbclient.so.0 Aicloud-pkg-mipsel/opt/tmp/lib/

wb/stamp-h1:

wb:wb/stamp-h1
	@$(MAKE) -C $(CURRENT)/wb -f Makefile.mipsel
	cp -rf $(CURRENT)/wb/libws.so Aicloud-pkg-mipsel/opt/tmp/lib/
push/stamp-h1:

push_log:push/stamp-h1
	@$(MAKE) -C $(CURRENT)/push_log
	cp -rf $(CURRENT)/push_log/libpush_log.so Aicloud-pkg-mipsel/opt/tmp/lib/
lighttpd:
	cd $(CURRENT)/lighttpd-1.4.39 && \
	./configure --host=mipsel-linux --build=i686-pc-linux-gnu --prefix=$(SRCBASE)/opt --with-pcre PCRECONFIG="$(SRCBASE)/pcre-8.31/pcre-config" --with-smbdav-props --with-openssl=$(SRCBASE)/openssl --with-openssl-includes=$(SRCBASE)/openssl/include/openssl --with-openssl-libs=$(SRCBASE)/openssl/ --with-webdav-props --with-smbdav-locks=yes --with-libsmbclient=$(SRCBASE)/samba-3.5.8/source3 --without-zlib --without-bzip2 --disable-ipv6 --enable-shared --disable-static  CFLAGS="-I$(SRCBASE)/pcre-8.31 -I$(SRCBASE)/curl-7.21.7 -I$(TOOLCHAIN)/include -I$(SRCBASE)/sqlite  -DHAVE_OPENSSL_SSL_H=1 -DHAVE_LIBSSL=1 -DEMBEDDED_EANBLE=1 -DAPP_IPKG=1 -DOLEG_MIPSEL=1" LIBS="-L$(TOOLCHAIN)/lib -ldl  -L$(SRCBASE)/wb -lws" LDFLAGS=" -L$(SRCBASE)/opt/lib -Wl,-rpath,/opt/lib -Wl,-rpath-link,$(SRCBASE)/opt/lib -Wl,-rpath,$(SRCBASE)/pcre-8.31/.libs -Wl,-rpath,$(SRCBASE)/libxml2/.libs -Wl,-rpath,$(SRCBASE)/openssl -Wl,-rpath,$(SRCBASE)/wb  -Wl,-rpath,$(SRCBASE)/curl-7.21.7/lib/.libs -L$(SRCBASE)/curl-7.21.7/lib/.libs -lcurl -L$(SRCBASE)/libxml2/.libs -lxml2 -L$(SRCBASE)/openssl -lcrypto -lssl" CURL_CFLAGS="-I$(SRCBASE)/curl-7.21.7" CURL_LIBS="-L$(SRCBASE)/curl-7.21.7/lib/.libs -lcurl" XML_CFLAGS="-I$(SRCBASE)/libxml2/include" XML_LIBS="-L$(SRCBASE)/libxml2/.libs -lxml2" SQLITE_CFLAGS="-I$(SRCBASE)/sqlite" SQLITE_LIBS="-L$(SRCBASE)/sqlite/.libs -lsqlite3" PCRE_LIB="-L$(SRCBASE)/pcre-8.31/.libs -lpcre" PCRECONFIG="$(SRCBASE)/pcre-8.31/pcre-config" SSL_LIB="-L$(SRCBASE)/openssl -lcrypto -lssl"  --no-create --no-recursion
	cd $(CURRENT)/lighttpd-1.4.39 && /bin/sh ./config.status	
	@$(MAKE) -C $(CURRENT)/lighttpd-1.4.39 
	cp -rf $(CURRENT)/lighttpd-1.4.39/src/lighttpd Aicloud-pkg-mipsel/opt/tmp/bin/
	cp -rf $(CURRENT)/lighttpd-1.4.39/src/lighttpd-arpping Aicloud-pkg-mipsel/opt/tmp/bin/
	cp -rf $(CURRENT)/lighttpd-1.4.39/src/lighttpd-monitor Aicloud-pkg-mipsel/opt/tmp/bin/
	cp -rf $(CURRENT)/lighttpd-1.4.39/src/.libs/mod_access.so Aicloud-pkg-mipsel/opt/tmp/lib/aicloud_mod_access.so
	cp -rf $(CURRENT)/lighttpd-1.4.39/src/.libs/mod_aidisk_access.so Aicloud-pkg-mipsel/opt/tmp/lib/aicloud_mod_aidisk_access.so
	cp -rf $(CURRENT)/lighttpd-1.4.39/src/.libs/mod_alias.so Aicloud-pkg-mipsel/opt/tmp/lib/aicloud_mod_alias.so
	cp -rf $(CURRENT)/lighttpd-1.4.39/src/.libs/mod_auth.so Aicloud-pkg-mipsel/opt/tmp/lib/aicloud_mod_auth.so
	cp -rf $(CURRENT)/lighttpd-1.4.39/src/.libs/mod_compress.so Aicloud-pkg-mipsel/opt/tmp/lib/aicloud_mod_compress.so
	cp -rf $(CURRENT)/lighttpd-1.4.39/src/.libs/mod_create_captcha_image.so Aicloud-pkg-mipsel/opt/tmp/lib/aicloud_mod_create_captcha_image.so
	cp -rf $(CURRENT)/lighttpd-1.4.39/src/.libs/mod_dirlisting.so Aicloud-pkg-mipsel/opt/tmp/lib/mod_dirlisting.so
	cp -rf $(CURRENT)/lighttpd-1.4.39/src/.libs/mod_indexfile.so Aicloud-pkg-mipsel/opt/tmp/lib/mod_indexfile.so
	#cp -rf $(CURRENT)/lighttpd-1.4.39/src/.libs/mod_redirect.so Aicloud-pkg-mipsel/opt/tmp/lib/aicloud_mod_redirect.so
	#cp -rf $(CURRENT)/lighttpd-1.4.39/src/.libs/mod_rewrite.so Aicloud-pkg-mipsel/opt/tmp/lib/aicloud_mod_rewrite.so
	cp -rf $(CURRENT)/lighttpd-1.4.39/src/.libs/mod_aicloud_sharelink.so Aicloud-pkg-mipsel/opt/tmp/lib/aicloud_mod_aicloud_sharelink.so
	cp -rf $(CURRENT)/lighttpd-1.4.39/src/.libs/mod_smbdav.so Aicloud-pkg-mipsel/opt/tmp/lib/aicloud_mod_smbdav.so
	cp -rf $(CURRENT)/lighttpd-1.4.39/src/.libs/mod_staticfile.so Aicloud-pkg-mipsel/opt/tmp/lib/mod_staticfile.so
	#cp -rf $(CURRENT)/lighttpd-1.4.39/src/.libs/mod_userdir.so Aicloud-pkg-mipsel/opt/tmp/lib/aicloud_mod_userdir.so
	#cp -rf $(CURRENT)/lighttpd-1.4.39/src/.libs/mod_usertrack.so Aicloud-pkg-mipsel/opt/tmp/lib/aicloud_mod_usertrack.so
	cp -rf $(CURRENT)/lighttpd-1.4.39/src/.libs/mod_webdav.so Aicloud-pkg-mipsel/opt/tmp/lib/aicloud_mod_webdav.so
	cp -rf $(CURRENT)/lighttpd-1.4.39/src/.libs/mod_aicloud_auth.so Aicloud-pkg-mipsel/opt/tmp/lib/mod_aicloud_auth.so
	cp -rf $(CURRENT)/lighttpd-1.4.39/src/.libs/mod_query_field_json.so Aicloud-pkg-mipsel/opt/tmp/lib/aicloud_mod_query_field_json.so
	cp -rf $(CURRENT)/lighttpd-1.4.39/src/.libs/liblightsql.so  Aicloud-pkg-mipsel/opt/tmp/lib/liblightsql.so
	cp -rf $(CURRENT)/lighttpd-1.4.39/src/.libs/mod_aicloud_invite.so Aicloud-pkg-mipsel/opt/tmp/lib/mod_aicloud_invite.so
	rm -rf Aicloud-pkg-0.1/opt/etc/aicloud_UI/js
	rm -rf Aicloud-pkg-0.1/opt/etc/aicloud_UI/css
	cp -rf $(CURRENT)/lighttpd-1.4.39/external_file/js Aicloud-pkg-mipsel/opt/etc/aicloud_UI/js
	cp -rf $(CURRENT)/lighttpd-1.4.39/external_file/css Aicloud-pkg-mipsel/opt/etc/aicloud_UI/css
Aicloud-ipk:
	mipsel-linux-strip Aicloud-pkg-mipsel/opt/tmp/bin/*
	mipsel-linux-strip Aicloud-pkg-mipsel/opt/tmp/lib/*
	@$(IPKG_TOOLS)/ipkg-build Aicloud-pkg-mipsel ./
